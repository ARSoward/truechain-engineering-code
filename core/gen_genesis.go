// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package core

import (
	"encoding/json"

	"github.com/truechain/truechain-engineering-code/core/fastchain"
	"github.com/truechain/truechain-engineering-code/core/snailchain"
)

//var _ = (*genesisSpecMarshaling)(nil)

func (g Genesis) MarshalJSON() ([]byte, error) {
	type Genesis struct {
		snailGenesis snailchain.Genesis
		fastGenesis  fastchain.Genesis
	}
	var enc Genesis
	enc.snailGenesis = g.snailGenesis
	enc.fastGenesis = g.fastGenesis
	return json.Marshal(&enc)
}

func (g *Genesis) UnmarshalJSON(input []byte) error {
	type Genesis struct {
		snailGenesis snailchain.Genesis
		fastGenesis  fastchain.Genesis
	}
	var snaildec snailchain.Genesis
	var fastdec fastchain.Genesis
	if err := json.Unmarshal(input, &snaildec); err != nil {
		return err
	}
	if err := json.Unmarshal(input, &fastdec); err != nil {
		return err
	}

	if &snaildec != nil {
		g.snailGenesis = snaildec
	}
	if &fastdec != nil {
		g.fastGenesis = fastdec
	}
	return nil
}
